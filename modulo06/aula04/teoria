CONCEITO DE SOLID -> Recomendações para ter um código melhor, com menos riscos de bug
e sucetíveis a alterações

S - Single Responsibility Principle(Princípio da Responsabilidade Única)
O - Open/Closed Principle(Princípio aberto-fechado)
L - Liskov Substitution Principle(Princípio substituição de Liskov)
I - Interface Segregation Principle(Princípio da segregação da interface)
D - Dependency Inversion Principle(Princípio inversão de dependência)


Single Responsibility Principle - Classes devem ter apenas uma responsabilidade - COESÃO

Open/Closed Principle - Classes devem estar abertas a extensões e fechadas a modificações - aula 01

Liskov Substitution Principle - Se uma classe recebe A e B extende A então essa classe deve receber classe B